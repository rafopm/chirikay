---
import Calendar from "../Icons/Calendar.astro";

export interface Props {
  title: string;
  description: string;
  thumbImage: string;
  url?: string;
  date: Date;
  slug: string;
  className?: string;
}

const { 
  title, 
  description, 
  thumbImage, 
  date, 
  url, 
  slug, 
  className = "" 
} = Astro.props;

const cardUrl = url || `/blog/${slug}/`;
const formattedDate = date.toLocaleDateString('es-ES', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<article
  class={`group relative overflow-hidden rounded-2xl bg-white shadow-sm hover:shadow-xl transition-all duration-500 ease-out hover:-translate-y-1 border border-rv-cta   ${className}`}
>
  <!-- Image Container -->
  <div class="relative overflow-hidden">
    <img
      class="h-48 w-full object-cover transition-transform duration-700 ease-out group-hover:scale-105"
      src={thumbImage}
      alt={title}
      loading="lazy"
      transition:name={`img-${slug}`}
    />
    <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
  </div>

  <!-- Content Container -->
  <div class="p-6 space-y-4">
    <!-- Date -->
    <div class="flex items-center gap-2 text-sm text-rv-dark font-secondary">
      <Calendar width="16" height="16" color="currentColor" />
      <time datetime={date.toISOString()}>
        {formattedDate}
      </time>
    </div>

    <!-- Title -->
    <h3 class="text-xl font-semibold text-rv-dark leading-tight line-clamp-2 group-hover:text-rv-accent transition-colors duration-200">
      {title}
    </h3>

    <!-- Description -->
    <p class="text-rv-very-dark leading-relaxed line-clamp-3 font-secondary">
      {description}
    </p>

    <!-- Read More Link -->
    <div class="pt-2">
      <a
        href={cardUrl}
        class="inline-flex items-center gap-2 text-sm font-medium text-rv-accent hover:text-rv-very-dark transition-colors duration-200 group/link"
        aria-label={`Leer mÃ¡s sobre ${title}`}
      >
        <span>Continuar leyendo</span>
        <svg 
          class="w-4 h-4 transition-transform duration-200 group-hover/link:translate-x-1" 
          fill="none" 
          stroke="currentColor" 
          viewBox="0 0 24 24"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
        </svg>
      </a>
    </div>
  </div>
</article>

<style>
  /* Utility classes for line clamping if not available in your Tailwind config */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>