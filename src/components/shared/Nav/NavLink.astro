---
const { href, currentPath, children } = Astro.props;
const isActive = currentPath === href;
---

<a
  href={href}
  class={`group w-full h-full flex items-center bg-rv-dark justify-center rounded-xl relative overflow-hidden transition-all duration-300 ${
    isActive ? "active" : ""
  }`}
>
  <span
    class="text-white relative z-10 transition-all duration-300 group-hover:translate-x-1 group-hover:text-shadow-md"
  >
    <slot />
  </span>
</a>

<style>
  a {
    width: 200px;
    height: 50px;
  }

  .group::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: left 0.6s ease;
    z-index: 1;
  }

  .group:hover::before {
    left: 100%;
  }

  /* Efecto de fondo al hover */
  .group:hover {
    background: rgba(var(--rv-very-dark-rgb), 0.7);
  }

  /* Estado activo */
  .active::after {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 3px;
    height: 30px;
    background: var(--rv-accent);
    border-radius: 2px;
    z-index: 3;
  }

  /* Efecto adicional al hover cuando est√° activo */
  .active:hover {
    box-shadow: 0 0 15px rgba(var(--rv-accent-rgb), 0.3);
  }
</style>
